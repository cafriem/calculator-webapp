{"ast":null,"code":"var _jsxFileName = \"/Users/cafriem/Desktop/untitled folder/calculator/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport \"./App.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst basicButtons = [[\"7\", \"8\", \"9\", \"/\"], [\"4\", \"5\", \"6\", \"*\"], [\"1\", \"2\", \"3\", \"-\"], [\"0\", \".\", \"=\", \"+\"]];\nconst scientificButtons = [[\"sin\", \"cos\", \"tan\", \"log\"], [\"(\", \")\", \"^\", \"%\"]];\nfunction App() {\n  _s();\n  const [mode, setMode] = useState(\"basic\");\n  const [display, setDisplay] = useState(\"\");\n  const handleButtonClick = value => {\n    if (value === \"=\") {\n      try {\n        // eslint-disable-next-line no-eval\n        setDisplay(eval(display).toString());\n      } catch {\n        setDisplay(\"Error\");\n      }\n    } else if ([\"sin\", \"cos\", \"tan\", \"log\"].includes(value)) {\n      try {\n        const num = parseFloat(display);\n        let result = \"\";\n        switch (value) {\n          case \"sin\":\n            result = Math.sin(num).toString();\n            break;\n          case \"cos\":\n            result = Math.cos(num).toString();\n            break;\n          case \"tan\":\n            result = Math.tan(num).toString();\n            break;\n          case \"log\":\n            result = Math.log10(num).toString();\n            break;\n          default:\n            break;\n        }\n        setDisplay(result);\n      } catch {\n        setDisplay(\"Error\");\n      }\n    } else if (value === \"C\") {\n      setDisplay(\"\");\n    } else {\n      setDisplay(display + value);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"calculator-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Calculator\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mode-toggle\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: mode === \"basic\" ? \"active\" : \"\",\n        onClick: () => setMode(\"basic\"),\n        children: \"Basic\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: mode === \"scientific\" ? \"active\" : \"\",\n        onClick: () => setMode(\"scientific\"),\n        children: \"Scientific\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"display\",\n      children: display || \"0\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"buttons\",\n      children: [(mode === \"scientific\" ? scientificButtons : []).map((row, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"button-row\",\n        children: row.map(btn => /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleButtonClick(btn),\n          children: btn\n        }, btn, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 15\n        }, this))\n      }, \"sci-\" + i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 11\n      }, this)), basicButtons.map((row, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"button-row\",\n        children: row.map(btn => /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleButtonClick(btn),\n          children: btn\n        }, btn, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 15\n        }, this))\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 11\n      }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"button-row\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleButtonClick(\"C\"),\n          children: \"C\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"nF66CWixvcXZ9WBR2YloVnnEJXQ=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","basicButtons","scientificButtons","App","_s","mode","setMode","display","setDisplay","handleButtonClick","value","eval","toString","includes","num","parseFloat","result","Math","sin","cos","tan","log10","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","map","row","i","btn","_c","$RefreshReg$"],"sources":["/Users/cafriem/Desktop/untitled folder/calculator/src/App.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport \"./App.css\";\n\nconst basicButtons = [\n  [\"7\", \"8\", \"9\", \"/\"],\n  [\"4\", \"5\", \"6\", \"*\"],\n  [\"1\", \"2\", \"3\", \"-\"],\n  [\"0\", \".\", \"=\", \"+\"]\n];\n\nconst scientificButtons = [\n  [\"sin\", \"cos\", \"tan\", \"log\"],\n  [\"(\", \")\", \"^\", \"%\"]\n];\n\nfunction App() {\n  const [mode, setMode] = useState(\"basic\");\n  const [display, setDisplay] = useState(\"\");\n\n  const handleButtonClick = (value) => {\n    if (value === \"=\") {\n      try {\n        // eslint-disable-next-line no-eval\n        setDisplay(eval(display).toString());\n      } catch {\n        setDisplay(\"Error\");\n      }\n    } else if ([\"sin\", \"cos\", \"tan\", \"log\"].includes(value)) {\n      try {\n        const num = parseFloat(display);\n        let result = \"\";\n        switch (value) {\n          case \"sin\":\n            result = Math.sin(num).toString();\n            break;\n          case \"cos\":\n            result = Math.cos(num).toString();\n            break;\n          case \"tan\":\n            result = Math.tan(num).toString();\n            break;\n          case \"log\":\n            result = Math.log10(num).toString();\n            break;\n          default:\n            break;\n        }\n        setDisplay(result);\n      } catch {\n        setDisplay(\"Error\");\n      }\n    } else if (value === \"C\") {\n      setDisplay(\"\");\n    } else {\n      setDisplay(display + value);\n    }\n  };\n\n  return (\n    <div className=\"calculator-container\">\n      <h1>Calculator</h1>\n      <div className=\"mode-toggle\">\n        <button\n          className={mode === \"basic\" ? \"active\" : \"\"}\n          onClick={() => setMode(\"basic\")}\n        >\n          Basic\n        </button>\n        <button\n          className={mode === \"scientific\" ? \"active\" : \"\"}\n          onClick={() => setMode(\"scientific\")}\n        >\n          Scientific\n        </button>\n      </div>\n      <div className=\"display\">{display || \"0\"}</div>\n      <div className=\"buttons\">\n        {(mode === \"scientific\" ? scientificButtons : []).map((row, i) => (\n          <div className=\"button-row\" key={\"sci-\" + i}>\n            {row.map((btn) => (\n              <button key={btn} onClick={() => handleButtonClick(btn)}>\n                {btn}\n              </button>\n            ))}\n          </div>\n        ))}\n        {basicButtons.map((row, i) => (\n          <div className=\"button-row\" key={i}>\n            {row.map((btn) => (\n              <button key={btn} onClick={() => handleButtonClick(btn)}>\n                {btn}\n              </button>\n            ))}\n          </div>\n        ))}\n        <div className=\"button-row\">\n          <button onClick={() => handleButtonClick(\"C\")}>C</button>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}